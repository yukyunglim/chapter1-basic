1. 객체(objece)와 객체 지향 프로그래밍 (Object Oriented Programming, OOP)

2. 객체
    0) 메모리 상에 올라가 있음
    1) 생각이나 행위의 영향을 주는 대상 (사전적 의미)
    2) 구체적, 추상적 데이터의 단위 (학생, 회원가입, 생산, 주문, 배송 등)

3. 절차 지향 프로그래밍과 객체 지향 프로그래밍
    1) 절차 지향 프로그래밍
        - 시간이나 사건의 흐름에 따른 프로그래밍
        - 예) 일어난다 -> 씻는다 -> 밥을 먹는다 -> 지하철을 탄다 -> 요금을 지불한다 -> 학원에 도착한다
                - main에서 이런 흐름으로 진행한다.
    
    2) 객체 지향 프로그래밍(OOP)
                              먹는다
                학생    <--------------->        밥
                 /|\                            /|\
                  | 탄다                         |
                 \|/                            \|/
                지하철  <--------------->       학원

4. 객체 지향 프로그래밍은 어떻게 구현하는가?
    1) 객체를 정의하고 (=class를 정의한다는 의미)
    2) 각 객체 제공하는 기능(=method)들을 구현하고 
    3) 각 객체가 제공하는 기능들 간의 소통(메시지 전달)을 통하여
        객체간 협력을 구현 

5. 객체 찾아보기(메모리에서 작동)
    1) 온라인 쇼핑몰에 회원 로그인을 하고 여러 판매자가 판매하고 있는 제품 중 하나를 골라 주문을 한다.
        -> 객체 = 회원, 판매자, 제품, 주문
    2) 아침에 학원에 가는 길에 빽다방에 들려 아이스 아메리카노를 주문했다.
        -> 객체 = 학원, 빽다방, 아이스 아메리카노, 주문
    3) 성적확인을 위해 학사관리시스템에 로그인하여 수강 한 과목들의 성적을 확인했다.
        -> 객체 = 성적, 과목

                                ||
                                ||    
                               \||/ 
6. 클래스(즉, 객체를 정의하기 , 일반화시키고 추상화시킴  ex) 홍길동, 홍길이라는 이름을 구체적으로가 아닌 이름으로 일반화 시키고 추상화시킴)
    1) 객체의 청사진(blueprint, 어떠한 자세한 계획)임
    2) 객체의 속성은 클래스의 멤버 변수(member variable)로 선언함       -------5. 자바프로그래밍 기본 참고
        -  멤버변수는 초기화하지 않고 선언만 함, 필요한 내용을 포함시킬 수 있음
    
7. 객체 지향 프로그램 순서
    1) 객체(클래스)를 정의
    2) 각 객체의 속성을 멤버 변수로, 역할(기능)을 메서드로 구현
    3) 각 객체간의 협력을 구현함

8. 클래스 코딩하기
    1) 클래스는 대문자로 시작하는 것을 권장
    2) java 파일 하나에 클래스는 여러 개가 있을 수 있지만,
       public 클래스는 하나이고, public 클래스와 .java 파일의 이름은 동일함
    3)camel notation 방식(낙타 표기법)으로 명명 
